name: Run SOAPUI Project on Multiple OS 

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  # pull_request:
  schedule:
    - cron: '15 16 * * *'

jobs:
  soapui:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Install SoapUI on Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          wget https://dl.eviware.com/soapuios/5.7.2/SoapUI-5.7.2-linux-bin.tar.gz
          tar -xzf SoapUI-5.7.2-linux-bin.tar.gz
          sudo mv SoapUI-5.7.2 /opt/soapui
          rm SoapUI-5.7.2-linux-bin.tar.gz

      - name: Install SoapUI on MacOS
        if: matrix.os == 'macos-latest'
        run: |
          curl -L https://dl.eviware.com/soapuios/5.7.2/SoapUI-5.7.2-mac-bin.zip -o SoapUI-mac.zip
          unzip SoapUI-mac.zip
          sudo mv SoapUI-5.7.2 /opt/soapui
          rm SoapUI-mac.zip

      - name: Install SoapUI on Windows
        if: matrix.os == 'windows-latest'
        run: |
          Invoke-WebRequest https://dl.eviware.com/soapuios/5.7.2/SoapUI-5.7.2-windows-bin.zip -OutFile SoapUI-win.zip
          Expand-Archive -Path SoapUI-win.zip -DestinationPath C:\SoapUI
          Remove-Item SoapUI-win.zip

      - name: Run SoapUI Tests
        run: |
          # Create the results directory
          mkdir -p results
          
          # Run tests based on OS
          if [[ "${{ matrix.os }}" == "ubuntu-latest" || "${{ matrix.os }}" == "macos-latest" ]]; then
            export SOAPUI_HOME=/opt/soapui
            chmod +x $SOAPUI_HOME/bin/testrunner.sh
            $SOAPUI_HOME/bin/testrunner.sh -s"CountryInfoServiceSoapBinding TestSuite" -r -a -f results CountryInfoService-soapui-project.xml
          elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            set SOAPUI_HOME=C:\SoapUI
            $Env:SOAPUI_HOME\bin\testrunner.bat -s"CountryInfoServiceSoapBinding TestSuite" -r -a -f results CountryInfoService-soapui-project.xml
          fi

      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: soapui-test-reports-${{ matrix.os }}
          path: results
