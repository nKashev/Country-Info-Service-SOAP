name: Run SOAPUI Project on Multiple OS 

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  # pull_request:
  schedule:
    - cron: '15 16 * * *'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        java: [17]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'

      - name: Install SoapUI
        run: |
          echo "Installing SoapUI..."
          if [ ${{ runner.os }} == 'Linux' ]; then
            wget https://dl.eviware.com/soapuios/5.7.2/SoapUI-5.7.2-linux-bin.tar.gz
            tar -xzf SoapUI-5.7.2-linux-bin.tar.gz
            sudo mv SoapUI-5.7.2 /opt/soapui
          elif [ ${{ runner.os }} == 'Windows' ]; then
            wget https://dl.eviware.com/soapuios/5.7.2/SoapUI-5.7.2-windows-bin.zip
            unzip SoapUI-5.7.2-windows-bin.zip -d C:\SoapUI
          else
            wget https://dl.eviware.com/soapuios/5.7.2/SoapUI-5.7.2-mac-bin.zip
            mkdir -p /opt/soapui
            unzip SoapUI-5.7.2-mac-bin.zip -d /opt/soapui
          fi

      - name: Verify SoapUI Installation
        run: |
          ls -la /opt/soapui

      - name: Run SoapUI Tests
        run: |
          if [ ${{ runner.os }} == 'Linux' ]; then
            /opt/soapui/bin/soapui.sh -a -r -j -f results -t CountryInfoService-soapui-project.xml -Dsoapui.headless=true
          elif [ ${{ runner.os }} == 'Windows' ]; then
            C:\SoapUI\SoapUI-5.7.2\bin\soapui.bat -a -r -j -f results -t CountryInfoService-soapui-project.xml -Dsoapui.headless=true
          else
            /opt/soapui/SoapUI-5.7.2/bin/soapui.sh -a -r -j -f results -t CountryInfoService-soapui-project.xml -Dsoapui.headless=true
          fi

      - name: Generate JUnit Report
        run: |
          echo "Generating JUnit report..."
          mkdir -p junit-results
          cp results/*.xml junit-results/
          
      - name: Convert JUnit XML to HTML Report
        run: |
          echo "Converting JUnit XML to HTML..."
          pip install junit2html
          junit2html junit-results/*.xml -o junit-results/report.html
          
      - name: Upload Report
        uses: actions/upload-artifact@v4
        with:
          name: soapui-test-report
          path: junit-results/report.html
